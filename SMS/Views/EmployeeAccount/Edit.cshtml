@model SMS.ViewModels.ViewTeacherAccount

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "EmployeeAccount", FormMethod.Post, new { @id = "myForm", enctype = "multipart/form-data", @onkeydown = "return (event.keyCode!=13);" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmployeeAccount.AccountId)
        @Html.HiddenFor(model => model.EmployeeAccount.NidOrBirtgRegNo)
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-info">

                <div class="panel-heading" role="tab" id="headingOne">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                            Teacher Information
                        </a>
                    </h4>
                </div>
                <div id="collapseOne" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOne">
                    <div class="panel-body">
                        @*<div class="col-sm-12 col-md-12 col-lg-12">*@
                        <div class="col-sm-6 col-md-6 col-lg-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.AccountId, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.AccountId, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.AccountId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.EmployeeCatagoryId, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.EmployeeCatagoryId, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.EmployeeCatagoryId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.DesignationId, "DesignationId", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownList("EmployeeAccount.DesignationId", @Model.Designation, htmlAttributes: new { @class = "form-control" })
                                    @* @Html.DropDownList("EmployeeAccount.DesignationId", null, htmlAttributes: new {@class = "form-control"})*@
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.DesignationId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.SubjectCode, "SubjectCode", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownList("EmployeeAccount.Subject", @Model.Subject, htmlAttributes: new { @class = "form-control" })
                                    @*  @Html.DropDownList("EmployeeAccountSubjectCode", null, htmlAttributes: new { @class = "form-control" })*@
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.SubjectCode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.IndexNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.IndexNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.IndexNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.ConfirmationId, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.ConfirmationId, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.ConfirmationId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.ConfirmDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.ConfirmDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.ConfirmDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.ConfirmedBy, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.ConfirmedBy, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.ConfirmedBy, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.RetiredDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.RetiredDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.RetiredDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.NidOrBirtgRegNo, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.NidOrBirtgRegNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.NidOrBirtgRegNo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.EmailAddress, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.EmailAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.MobileNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.MobileNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.LasttName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.LasttName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.LasttName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.OccupationId, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.OccupationId, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.OccupationId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.FathersName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.FathersName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.FathersName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.FathersOccupation, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.FathersOccupation, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.FathersOccupation, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.MothersName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.MothersName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.MothersName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.MothersOccupation, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.MothersOccupation, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.MothersOccupation, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.DateOfBirth, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.PresentAddress, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.PresentAddress, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.PresentAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.PermanentAddress, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.PermanentAddress, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.PermanentAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>


                        <div class="col-sm-6 col-md-6 col-lg-6">


                            <div class="form-group">
                                <label id="Photo" class="control-label col-md-4">Photo</label>
                                <div class="col-md-8">
                                    <img src="@Url.Action("GetThumbnailImage", "EmployeeAccount", new {nId = Model.EmployeeAccount.NidOrBirtgRegNo})" id="blah" style="width: 200px; height: 200px; border: solid; border-color: gray">
                                </div>
                            </div>
                            <div class="form-group">
                                <label id="Photo" class=" control-label col-md-4"> </label>
                                <div class="col-md-8">
                                    <input name="image" type="file" accept="image/gif, image/jpeg, image/png" id="imgInp" />
                                </div>
                            </div>



                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.MaritarialStatus, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.MaritarialStatus, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.MaritarialStatus, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.Gender, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.Religion, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.Religion, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.Religion, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.BloodGroup, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.BloodGroup, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.BloodGroup, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.Nationality, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.Nationality, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.RegDateTime, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.RegDateTime, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.RegDateTime, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeAccount.LastLoginDateTime, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.EmployeeAccount.LastLoginDateTime, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmployeeAccount.LastLoginDateTime, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    </div>
                </div>









                <div class="panel-heading" role="tab" id="headingTwo">
                    <h4 class="panel-title">
                        <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                            Academic Background
                        </a>
                    </h4>
                </div>

                <div id="collapseTwo" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
                    <div class="panel-body">
                        <div id="A" class="table-responsive" style="overflow: auto; height: 250px; padding:0px">
                            <table id="T2" class="table table-striped table-bordered">
                                <tr>
                                    <th style="visibility:hidden">
                                    </th>
                                    <th>
                                        Exam
                                    </th>
                                    <th>
                                        University/Board/Institute
                                    </th>
                                    <th>
                                        Group/Discipline
                                    </th>
                                    <th>
                                        Year
                                    </th>
                                    <th>
                                        Grade/Division
                                    </th>
                                    <th>
                                        Registration No
                                    </th>
                                    <th>

                                    </th>
                                </tr>

                                @foreach (var item in Model.EmployeeEducationalQualifications)
                                {
                                    <tr>
                                        <td style="visibility:hidden">
                                            @Html.DisplayFor(modelItem => item.Id)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ExamOrDegree)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.InstituteName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Group)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.PassingYear)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.GpaOrDivison)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.RegNumber)
                                        </td>
                                        <td>
                                            <button type="button" class="btn btn-default" data-toggle="modal" data-target="#myModal" onclick="LoadRow(this)">
                                                Edit
                                            </button>
                                            <button type="button" id="Link" class="btn btn-default" data-itemid="@item.Id" onclick=" Delete(this)">Delete</button>

                                        </td>

                                    </tr>
                                }

                            </table>
                        </div>
                        <div class="modal fade col-sm-12 col-md-12 col-lg-12" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true"></span></button>
                                        <h4 class="modal-title" id="myModalLabel">Student Education Edit</h4>
                                    </div>
                                    <div class="modal-body">
                                        <div class="form-group">
                                            <label class="col-md-3">Exam</label>
                                            <div class="col-md-9">
                                                <input id="Exam" name="Exam" class="form-control" value="" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="col-md-3">University/Board/Institute</label>
                                            <div class="col-md-9">
                                                <input id="Institute" name="Institute" class="form-control" value="" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="col-md-3">Registration No</label>
                                            <div class="col-md-9">
                                                <input id="Registration" name="Registration" class="form-control" value="" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="col-md-3">Group/Discipline</label>
                                            <div class="col-md-9">
                                                <input id="Group" name="Group" class="form-control" value="" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="col-md-3">Year</label>
                                            <div class="col-md-9">
                                                <input id="Year" name="Year" class="form-control" value="" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="col-md-3">Grade/Division</label>
                                            <div class="col-md-9">
                                                <input id="Grade" name="Grade" class="form-control" value="" />
                                            </div>
                                        </div>
                                        <div class="form-group" style="visibility:hidden">
                                            <input id="Id" name="Id" class="form-control" value="" />
                                        </div>
                                        <div class="modal-footer">
                                            <div class="form-group">
                                                <div class="col-md-2">
                                                    <input type="button" value="Update" onclick="Update()" data-dismiss="modal" class="btn btn-default" />
                                                </div>
                                                <div class="col-md-8">
                                                </div>
                                                <div class="col-md-2">
                                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn btn-default" data-toggle="modal" data-target="#myModal" onclick="AddRow()">
                            +
                        </button>

                    </div>
                </div>






                <input id="StudentId" name="StudentId" class="form-control" value="@Model.EmployeeAccount.NidOrBirtgRegNo" style="visibility:hidden" />
            </div>
        </div>





        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">


        var i = 0;
        var original = document.getElementById('Copy');

        function duplicate(s) {
            var clone = original.cloneNode(true); // "deep" clone
            clone.id = "Copy" + ++i;
            clone.style.display = 'block';
            // or clone.id = ""; if the divs don't need an ID
            original.parentNode.appendChild(clone);
            //original.style.visibility = 'visible'
            var clonebtn = s.cloneNode(true); // "deep" clone
            clonebtn.id = "addField" + ++i;
            s.style.display = 'none';
            s.parentNode.appendChild(clonebtn);
            //display: none

        }

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#blah').attr('src', e.target.result)
                    .width(200)
                    .height(200);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#imgInp").change(function () {
            readURL(this);
        });

        var Index = 0;
        var Status = "";
        function LoadRow(b) {
            var i = b.parentNode.parentNode.rowIndex;
            var text1 = document.getElementById("Id");
            var text2 = document.getElementById("Exam");
            var text3 = document.getElementById("Institute");
            var text4 = document.getElementById("Group");
            var text5 = document.getElementById("Year");
            var text6 = document.getElementById("Grade");
            var text7 = document.getElementById("Registration");

            Index = i;
            text1.value = document.getElementById("T2").rows[i].cells[0].innerHTML.trim();
            text2.value = document.getElementById("T2").rows[i].cells[1].innerHTML.trim();
            text3.value = document.getElementById("T2").rows[i].cells[2].innerHTML.trim();
            text4.value = document.getElementById("T2").rows[i].cells[3].innerHTML.trim();
            text5.value = document.getElementById("T2").rows[i].cells[4].innerHTML.trim();
            text6.value = document.getElementById("T2").rows[i].cells[5].innerHTML.trim();
            text7.value = document.getElementById("T2").rows[i].cells[6].innerHTML.trim();
            Status = "Update";

        }

        function AddRow() {
            Status = "Save";
            Empty();
        }
        //function Delete() {
        //    Status = "Delete";
        //    //Dlt();
        //}

        function Empty() {
            document.getElementById("Exam").value = "";
            document.getElementById("Institute").value = "";
            document.getElementById("Group").value = "";
            document.getElementById("Year").value = "";
            document.getElementById("Grade").value = "";
            document.getElementById("Registration").value = "";
        }


        function Update() {

            var exam = document.getElementById("Exam").value;
            var institute = document.getElementById("Institute").value;
            var group = document.getElementById("Group").value;
            var year = document.getElementById("Year").value;
            var grade = document.getElementById("Grade").value;
            var id = document.getElementById("Id").value;
            var studentId = document.getElementById("StudentId").value;
            if (Status == "Update") {
                var param = JSON.stringify({ exam: exam, institute: institute, group: group, year: year, grade: grade, id: id });

                $.ajax({
                    type: "POST",
                    url: "/StudentAccount/Save",
                    data: param,
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                        var alerttype = "danger";
                        if (response.result === "success") {
                            alerttype = "success";
                            //deleteRow(BtnId);
                            alert("Data Update success");

                            document.getElementById("T2").rows[Index].cells[1].innerHTML = exam.trim();
                            document.getElementById("T2").rows[Index].cells[2].innerHTML = institute.trim();
                            document.getElementById("T2").rows[Index].cells[3].innerHTML = group.trim();
                            document.getElementById("T2").rows[Index].cells[4].innerHTML = year.trim();
                            document.getElementById("T2").rows[Index].cells[5].innerHTML = grade.trim();

                        }
                        //alert(gSettings.deleteMsg);

                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        //alert(errorThrown);
                        Msg = "Something went wrong. Data couldn't be saved!";
                    }
                });
            }
            if (Status == "Save") {
                var param = JSON.stringify({ exam: exam, institute: institute, group: group, year: year, grade: grade, studentNid: studentId });
                $.ajax({
                    type: "POST",
                    url: "/StudentAccount/NewSave",
                    data: param,
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                        var alerttype = "danger";
                        if (response.result !== "error") {
                            // response.result == Id;
                            alerttype = "success";
                            //deleteRow(BtnId);
                            alert("Data Save success");
                            var table = document.getElementById("T2");
                            var row = table.insertRow(table.rows.length);
                            var cell0 = row.insertCell(0);
                            var cell1 = row.insertCell(1);
                            var cell2 = row.insertCell(2);
                            var cell3 = row.insertCell(3);
                            var cell4 = row.insertCell(4);
                            var cell5 = row.insertCell(5);
                            var cell6 = row.insertCell(6);
                            //var cell6 = ;
                            cell0.style.visibility = "hidden";
                            cell0.innerHTML = response.result;
                            cell1.innerHTML = exam.trim();
                            cell2.innerHTML = institute.trim();
                            cell3.innerHTML = group.trim();
                            cell4.innerHTML = year.trim();
                            cell5.innerHTML = grade.trim();
                            cell6.innerHTML = '<button type="button" class="btn btn-default" data-toggle="modal" data-target="#myModal" onclick="LoadRow(this)">Edit</button>' + " " +
                                              '<button type="button" id="Link" class="btn btn-default" data-itemid="item.id" onclick=" Delete(this)">Delete</button>';
                            text1.value = "";
                            text2.value = "";
                            text3.value = "";
                            text4.value = "";
                            text5.value = "";
                            text6.value = "";

                        }
                        //alert(gSettings.deleteMsg);

                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        //alert(errorThrown);
                        Msg = "Something went wrong. Data couldn't be saved!";
                    }
                });
            }
        }

        //Delete

        var gSettings = {
            "dataSavedMsg": "Data saved successfully!",
            "dataNotSavedMsg": "Something went wrong. Data couldn't be saved!",
            "deleteConfirm": "Are you sure want to delete?",
            "deleteMsg": "Data deleted successfully!"
        }

        //function Dlt()
        function Delete(e) {
            var id = e.parentNode.parentNode.rowIndex;
            var itemId = document.getElementById("T2").rows[id].cells[0].innerHTML.trim();
            var BtnId = this;
            window.bootbox.confirm(gSettings.deleteConfirm, function (result) {
                if (!result) return;
                var param = JSON.stringify({ id: itemId });
                $.ajax({
                    type: "POST",
                    url: "/StudentAccount/StudentEducationDelete",
                    data: param,
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                        var alerttype = "danger";
                        if (response.result === "success") {
                            alerttype = "success";
                            deleteRow(e);
                        }
                        alert(gSettings.deleteMsg);

                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert(errorThrown);
                    }
                });
            });
        }

        function deleteRow(btn) {
            var row = btn.parentNode.parentNode;
            row.parentNode.removeChild(row);
        }

    </script>
}


