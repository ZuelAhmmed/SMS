
@model SMS.ViewModels.ViewStudentAccount
@{
    ViewBag.Title = "Edit";
}
<h2>Edit</h2>
@using (Html.BeginForm("Edit", "StudentAccount", FormMethod.Post, new { @id = "myForm", enctype = "multipart/form-data", @onkeydown = "return (event.keyCode!=13);" }))
{
    @Html.AntiForgeryToken()
  
    <div class="form-horizontal">
        <h4>StudentAccount</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StudentAccount.AccountId)
        @Html.HiddenFor(model => model.StudentAccount.NidOrBirtgRegNo)

        @*@Html.HiddenFor(model => model.AccountId)*@


    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
    <div class="panel panel-info">

    <div class="panel-heading" role="tab" id="headingOne">
        <h4 class="panel-title">
            <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                Student Info
            </a>
        </h4>
    </div>
    <div id="collapseOne" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOne">
    <div class="panel-body">
    @*<div class="col-sm-12 col-md-12 col-lg-12">*@
    <div class="col-sm-6 col-md-6 col-lg-6">
        <div class="form-group">
            <label id="" class="col-md-4" style="padding: 0px"> Nid Or Birtg Reg No</label>
            @* @Html.LabelFor(model => model.StudentAccount.NidOrBirtgRegNo, htmlAttributes: new {@class = "control-label col-md-3"})*@
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.NidOrBirtgRegNo, new {htmlAttributes = new {@class = "form-control", disabled = "disabled"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.NidOrBirtgRegNo, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @*<label class="col-md-2"> FirstName </label>*@
            @Html.LabelFor(model => model.StudentAccount.FirstName, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.FirstName, new {htmlAttributes = new {@class = "form-control", @value = Model.FirstName}})
                @Html.ValidationMessageFor(model => model.StudentAccount.FirstName, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.LasttName, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.LasttName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.LasttName, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.ClassOrYearId, "Class", htmlAttributes: new {@class = "control-label col-md-4"})
            @*<label id="ClassL" class="col-md-4" style="padding-left: 70px"> Class</label>*@
            <div class="col-md-8">
                @Html.DropDownList("StudentAccount.ClassOrYearId", @Model.Class, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.StudentAccount.ClassOrYearId, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.ClassRollNo, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.ClassRollNo, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.ClassRollNo, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.GroupId, "Group", htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.DropDownList("StudentAccount.GroupId", @Model.Group, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.StudentAccount.GroupId, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.GuardianNid, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.GuardianNid, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.GuardianNid, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.FathersName, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.FathersName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.FathersName, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.MothersName, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.MothersName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.MothersName, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.DateOfBirth, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.DateOfBirth, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.DateOfBirth, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.EmailAddress, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.EmailAddress, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.EmailAddress, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.MobileNumber, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.MobileNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.MobileNumber, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.Nationality, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.Nationality, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.Nationality, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.PassingYear, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.PassingYear, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.PassingYear, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.PresentAddress, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.StudentAccount.PresentAddress, new {@class = "form-control", @rows = "4", @cols = "5", @style = "width:280px"})
                @Html.ValidationMessageFor(model => model.StudentAccount.PresentAddress)
            </div>
        </div>
        @*<div class="form-group">
                                    @Html.LabelFor(model => model.StudentAccount.StudentConfirm, htmlAttributes: new {@class = "control-label col-md-4"})
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.StudentAccount.StudentConfirm, new {htmlAttributes = new {@class = "form-control"}})
                                        @Html.ValidationMessageFor(model => model.StudentAccount.StudentConfirm, "", new {@class = "text-danger"})
                                    </div>
                                </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.ConfirmDate, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.ConfirmDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.ConfirmDate, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.Religion, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.Religion, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.Religion, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.BloodGroup, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.BloodGroup, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.BloodGroup, "", new {@class = "text-danger"})
            </div>
        </div>
        @*<div class="form-group">
                                    @Html.LabelFor(model => model.StudentAccount.ConfirmedBy, htmlAttributes: new {@class = "control-label col-md-4"})
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.StudentAccount.ConfirmedBy, new {htmlAttributes = new {@class = "form-control"}})
                                        @Html.ValidationMessageFor(model => model.StudentAccount.ConfirmedBy, "", new {@class = "text-danger"})
                                    </div>
                                </div>*@

        @*<div class="form-group">
                                    @Html.LabelFor(model => model.StudentAccount.ExamPermissionId, htmlAttributes: new {@class = "control-label col-md-4"})
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.StudentAccount.ExamPermissionId, new {htmlAttributes = new {@class = "form-control"}})
                                        @Html.ValidationMessageFor(model => model.StudentAccount.ExamPermissionId, "", new {@class = "text-danger"})
                                    </div>
                                </div>*@
        @*<div class="form-group">
                                    @Html.LabelFor(model => model.StudentAccount.OccupationId, htmlAttributes: new {@class = "control-label col-md-4"})
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.StudentAccount.OccupationId, new {htmlAttributes = new {@class = "form-control"}})
                                        @Html.ValidationMessageFor(model => model.StudentAccount.OccupationId, "", new {@class = "text-danger"})
                                    </div>
                                </div>*@
    </div>
    <div class="col-sm-6 col-md-6 col-lg-6">
        <div class="form-group">
            <label id="Photo" class="control-label col-md-4">Photo</label>
            <div class="col-md-8">
                <img src="@Url.Action("GetThumbnailImage", "StudentAccount", new {nId = Model.StudentAccount.NidOrBirtgRegNo})" id="blah" style="width: 200px; height: 200px; border: solid; border-color: gray">
            </div>
        </div>
        <div class="form-group">
            <label id="Photo" class=" control-label col-md-4"> </label>
            <div class="col-md-8">
                <input name="image" type="file" accept="image/gif, image/jpeg, image/png" id="imgInp"/>
            </div>
        </div>
        @*<div class="form-group">
                                    <label class="col-md-3"></label>
                                    <div class="col-md-9">
                                        <input type="checkbox" id="AS" name="AS" onclick="FillAddress(this.form)"> <b> Same As Present Address </b>
                                    </div>
                                </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.Shift, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.Shift, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.Shift, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.Section, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.Section, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.Section, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.FathersOccupation, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.FathersOccupation, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.FathersOccupation, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.MothersOccupation, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.MothersOccupation, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.MothersOccupation, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.RegDateTime, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.RegDateTime, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.RegDateTime, "", new {@class = "text-danger"})
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.FamilyIncome, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.FamilyIncome, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.FamilyIncome, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.MaritarialStatus, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.MaritarialStatus, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.MaritarialStatus, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.Gender, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.Gender, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.Gender, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.PermanentAddress, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.StudentAccount.PermanentAddress, new {@class = "form-control", @rows = "4", @cols = "5", @style = "width:280px"})
                @Html.ValidationMessageFor(model => model.StudentAccount.PermanentAddress)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentAccount.AccountId, htmlAttributes: new {@class = "control-label col-md-4"})
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentAccount.AccountId, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StudentAccount.AccountId, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>
    </div>
    </div>



        <div class="panel-heading" role="tab" id="headingTwo">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                    Academic Background
                </a>
            </h4>
        </div>

        <div id="collapseTwo" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
            <div class="panel-body">
                <div id="A" class="table-responsive" style="overflow: auto; height: 250px; padding:0px">
                    <table id="T2" class="table table-striped table-bordered">
                        <tr>
                            <th style="visibility:hidden">
                            </th>
                            <th>
                                Exam
                            </th>
                            <th>
                                University/Board/Institute
                            </th>
                            <th>
                                Group/Discipline
                            </th>
                            <th>
                                Year
                            </th>
                            <th>
                                Grade/Division
                            </th>
                            <th>
                                Registration No
                            </th>
                            <th>

                            </th>
                        </tr>

                        @foreach (var item in Model.StudentEducationalQualifications)
                        {
                            <tr>
                                <td style="visibility:hidden">
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ExamOrDegree)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.InstituteName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Group)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PassingYear)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.GpaOrDivison)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RegNumber)
                                </td>
                                <td>
                                    <button type="button" class="btn btn-default" data-toggle="modal" data-target="#myModal" onclick="LoadRow(this)">
                                        Edit
                                    </button>
                                    <button type="button" id="Link" class="btn btn-default" data-itemid="@item.Id" onclick=" Delete(this)">Delete</button>

                                </td>

                            </tr>
                        }

                    </table>
                </div>
                <div class="modal fade col-sm-12 col-md-12 col-lg-12" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true"></span></button>
                                <h4 class="modal-title" id="myModalLabel">Student Education Edit</h4>
                            </div>
                            <div class="modal-body">
                                <div class="form-group">
                                    <label class="col-md-3">Exam</label>
                                    <div class="col-md-9">
                                        <input id="Exam" name="Exam" class="form-control" value="" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3">University/Board/Institute</label>
                                    <div class="col-md-9">
                                        <input id="Institute" name="Institute" class="form-control" value=""/>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3">Registration No</label>
                                    <div class="col-md-9">
                                        <input id="Registration" name="Registration" class="form-control" value="" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3">Group/Discipline</label>
                                    <div class="col-md-9">
                                        <input id="Group" name="Group" class="form-control" value="" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3">Year</label>
                                    <div class="col-md-9">
                                        <input id="Year" name="Year" class="form-control" value="" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-md-3">Grade/Division</label>
                                    <div class="col-md-9">
                                        <input id="Grade" name="Grade" class="form-control" value="" />
                                    </div>
                                </div>
                                <div class="form-group" style="visibility:hidden">
                                    <input id="Id" name="Id" class="form-control" value="" />
                                </div>
                                <div class="modal-footer">
                                    <div class="form-group">
                                        <div class="col-md-2">
                                            <input type="button" value="Update" onclick="Update()" data-dismiss="modal" class="btn btn-default" />
                                        </div>
                                        <div class="col-md-8">
                                        </div>
                                        <div class="col-md-2">
                                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <button type="button" class="btn btn-default" data-toggle="modal" data-target="#myModal" onclick="AddRow()">
                    +
                </button>

            </div>
        </div>






        <input id="StudentId" name="StudentId" class="form-control" value="@Model.StudentAccount.NidOrBirtgRegNo" style="visibility:hidden" />


    </div>
    </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">


    var i = 0;
    var original = document.getElementById('Copy');

    function duplicate(s) {
        var clone = original.cloneNode(true); // "deep" clone
        clone.id = "Copy" + ++i;
        clone.style.display = 'block';
        // or clone.id = ""; if the divs don't need an ID
        original.parentNode.appendChild(clone);
        //original.style.visibility = 'visible'
        var clonebtn = s.cloneNode(true); // "deep" clone
        clonebtn.id = "addField" + ++i;
        s.style.display = 'none';
        s.parentNode.appendChild(clonebtn);
        //display: none

    }

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#blah').attr('src', e.target.result)
                .width(200)
                .height(200);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    $("#imgInp").change(function () {
        readURL(this);
    });

    var Index = 0;
    var Status = "";
    function LoadRow(b) {
        var i = b.parentNode.parentNode.rowIndex;
        var text1 = document.getElementById("Id");
        var text2 = document.getElementById("Exam");
        var text3 = document.getElementById("Institute");
        var text4 = document.getElementById("Group");
        var text5 = document.getElementById("Year");
        var text6 = document.getElementById("Grade");
        var text7 = document.getElementById("Registration");

        Index = i;
        text1.value = document.getElementById("T2").rows[i].cells[0].innerHTML.trim();
        text2.value = document.getElementById("T2").rows[i].cells[1].innerHTML.trim();
        text3.value = document.getElementById("T2").rows[i].cells[2].innerHTML.trim();
        text4.value = document.getElementById("T2").rows[i].cells[3].innerHTML.trim();
        text5.value = document.getElementById("T2").rows[i].cells[4].innerHTML.trim();
        text6.value = document.getElementById("T2").rows[i].cells[5].innerHTML.trim();
        text7.value = document.getElementById("T2").rows[i].cells[6].innerHTML.trim();
        Status = "Update";

    }

    function AddRow() {
        Status = "Save";
        Empty();
    }
    //function Delete() {
    //    Status = "Delete";
    //    //Dlt();
        //}

    function Empty() {
        document.getElementById("Exam").value = "";
        document.getElementById("Institute").value = "";
        document.getElementById("Group").value = "";
        document.getElementById("Year").value = "";
        document.getElementById("Grade").value = "";
        document.getElementById("Registration").value = "";
    }


    function Update() {

        var exam = document.getElementById("Exam").value;
        var institute = document.getElementById("Institute").value;
        var group = document.getElementById("Group").value;
        var year = document.getElementById("Year").value;
        var grade = document.getElementById("Grade").value;
        var id = document.getElementById("Id").value;
        var studentId = document.getElementById("StudentId").value;
        if (Status == "Update") {
            var param = JSON.stringify({ exam: exam, institute: institute, group: group, year: year, grade: grade, id: id });

            $.ajax({
                type: "POST",
                url: "/StudentAccount/Save",
                data: param,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    var alerttype = "danger";
                    if (response.result === "success") {
                        alerttype = "success";
                        //deleteRow(BtnId);
                        alert("Data Update success");

                        document.getElementById("T2").rows[Index].cells[1].innerHTML = exam.trim();
                        document.getElementById("T2").rows[Index].cells[2].innerHTML = institute.trim();
                        document.getElementById("T2").rows[Index].cells[3].innerHTML = group.trim();
                        document.getElementById("T2").rows[Index].cells[4].innerHTML = year.trim();
                        document.getElementById("T2").rows[Index].cells[5].innerHTML = grade.trim();

                    }
                    //alert(gSettings.deleteMsg);

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    //alert(errorThrown);
                    Msg = "Something went wrong. Data couldn't be saved!";
                }
            });
        }
        if (Status == "Save") {
            var param = JSON.stringify({ exam: exam, institute: institute, group: group, year: year, grade: grade, studentNid: studentId });
            $.ajax({
                type: "POST",
                url: "/StudentAccount/NewSave",
                data: param,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    var alerttype = "danger";
                    if (response.result !== "error") {
                        // response.result == Id;
                        alerttype = "success";
                        //deleteRow(BtnId);
                        alert("Data Save success");
                        var table = document.getElementById("T2");
                        var row = table.insertRow(table.rows.length);
                        var cell0 = row.insertCell(0);
                        var cell1 = row.insertCell(1);
                        var cell2 = row.insertCell(2);
                        var cell3 = row.insertCell(3);
                        var cell4 = row.insertCell(4);
                        var cell5 = row.insertCell(5);
                        var cell6 = row.insertCell(6);
                        //var cell6 = ;
                        cell0.style.visibility = "hidden";
                        cell0.innerHTML = response.result;
                        cell1.innerHTML = exam.trim();
                        cell2.innerHTML = institute.trim();
                        cell3.innerHTML = group.trim();
                        cell4.innerHTML = year.trim();
                        cell5.innerHTML = grade.trim();
                        cell6.innerHTML = '<button type="button" class="btn btn-default" data-toggle="modal" data-target="#myModal" onclick="LoadRow(this)">Edit</button>' + " " +
                                          '<button type="button" id="Link" class="btn btn-default" data-itemid="item.id" onclick=" Delete(this)">Delete</button>';
                        text1.value = "";
                        text2.value = "";
                        text3.value = "";
                        text4.value = "";
                        text5.value = "";
                        text6.value = "";

                    }
                    //alert(gSettings.deleteMsg);

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    //alert(errorThrown);
                    Msg = "Something went wrong. Data couldn't be saved!";
                }
            });
        }
    }

    //Delete

    var gSettings = {
        "dataSavedMsg": "Data saved successfully!",
        "dataNotSavedMsg": "Something went wrong. Data couldn't be saved!",
        "deleteConfirm": "Are you sure want to delete?",
        "deleteMsg": "Data deleted successfully!"
    }

    //function Dlt()
    function Delete(e) {
        var id = e.parentNode.parentNode.rowIndex;
        var itemId = document.getElementById("T2").rows[id].cells[0].innerHTML.trim();
        var BtnId = this;
        window.bootbox.confirm(gSettings.deleteConfirm, function (result) {
            if (!result) return;
            var param = JSON.stringify({ id: itemId });
            $.ajax({
                type: "POST",
                url: "/StudentAccount/StudentEducationDelete",
                data: param,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    var alerttype = "danger";
                    if (response.result === "success") {
                        alerttype = "success";
                        deleteRow(e);
                    }
                    alert(gSettings.deleteMsg);

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                }
            });
        });
    }

    function deleteRow(btn) {
        var row = btn.parentNode.parentNode;
        row.parentNode.removeChild(row);
    }

    </script>

}


