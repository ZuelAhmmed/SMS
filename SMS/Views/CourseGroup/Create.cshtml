@*@model IEnumerable<SMS.ViewModels.ViewCourseGroup>*@
@model SMS.ViewModels.ViewCourseGroup

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
     
        <hr />
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-info">

                <div class="panel-heading" role="tab" id="headingOne">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                            Section Information
                        </a>
                    </h4>
                </div>
                <div id="collapseOne" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOne">
                    <div class="panel-body">
                        <div class="col-lg-12 col-md-12 col-sm-12">
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CourseGroup.ClassId, "ClassId", htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownList("CourseGroup.ClassId", @Model.ClassId, string.Empty, new { @class = "form-control", @onchange = "DropDownChange(this.value)", @id = "ClassId" })
                                        @* @Html.DropDownList("ClassId", null, htmlAttributes: new {@class = "form-control"})*@
                                        @Html.ValidationMessageFor(model => model.CourseGroup.ClassId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CourseGroup.CourseId, "CourseId", htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownList("CourseGroup.CourseId", @Model.CourseId, string.Empty, new { @class = "form-control", @id = "CourseId" })
                                        @*@Html.DropDownList("CourseId", null, htmlAttributes: new {@class = "form-control"})*@
                                        @Html.ValidationMessageFor(model => model.CourseGroup.CourseId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CourseGroup.GroupId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.CourseGroup.GroupId, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CourseGroup.GroupId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CourseGroup.TeacherId, "TeacherId", htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownList("CourseGroup.TeacherId", @Model.TeacherId, string.Empty, new { @class = "form-control" })
                                        @* @Html.DropDownList("TeacherId", null, htmlAttributes: new {@class = "form-control"})*@
                                        @Html.ValidationMessageFor(model => model.CourseGroup.TeacherId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-6">

                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.TeacherId1, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.TeacherId1, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.TeacherId1, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.TeacherId2, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.TeacherId2, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.TeacherId2, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CourseGroup.Capacity, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.CourseGroup.Capacity, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CourseGroup.Capacity, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.StudentCount, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.StudentCount, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.StudentCount, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@



                                <div class="form-group">
                                    @Html.LabelFor(model => model.CourseGroup.SectionGroup, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.CourseGroup.SectionGroup, new { htmlAttributes = new { @class = "form-control", @id = "SectionGroup" } })
                                        @Html.ValidationMessageFor(model => model.CourseGroup.SectionGroup, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CourseGroup.DayTimeSlot, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownList("CourseGroup.DayTimeSlot", @Model.ScheduleIno, string.Empty, new { @class = "form-control" })
                                        @* @Html.EditorFor(model => model.CourseGroup.DayTimeSlot, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @Html.ValidationMessageFor(model => model.CourseGroup.DayTimeSlot, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
                        }

                        <div>
                            @Html.ActionLink("Back to List", "Index")
                        </div>




                        @section Scripts {
                            @Scripts.Render("~/bundles/jqueryval")
                            <script type="text/javascript">

                                function FillSectionGroup(val) {
                                    var section = document.getElementById(val.id).value
                                    var courseCode = document.getElementById("CourseId").value
                                    document.getElementById("SectionGroup").value = courseCode + "(" + section + ")"

                                    //section.value = "";

                                }

                                function DropDownChange(val) {
                                    var classId = document.getElementById("ClassId").value;
                                    var courseId = document.getElementById("CourseId").value;
                                    window.location.href = "/CourseGroup/LoadCourseSchedule?classId=" + classId + "&courseId=" + courseId;
                                }




                            </script>
                        }
